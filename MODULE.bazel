module(
    name = "evspace",
    version = "0.0.1",
    compatibility_level = 1
)

bazel_dep(name = "googletest", version = "1.14.0", repo_name = "com_google_googletest")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "platforms", version = "0.0.9")
bazel_dep(name = "aspect_bazel_lib", version = "2.7.7")
bazel_dep(name = "aspect_rules_ts", version = "3.0.0-rc0")
bazel_dep(name = "aspect_rules_js", version = "2.0.0-rc0")
bazel_dep(name = "aspect_rules_jest", version = "0.22.0-rc0")
bazel_dep(name = "aspect_rules_swc", version = "2.0.0-rc1")
bazel_dep(name = "protobuf", version = "27.2")

rules_ts_ext = use_extension("@aspect_rules_ts//ts:extensions.bzl", "ext", dev_dependency = True)
rules_ts_ext.deps()
use_repo(rules_ts_ext, "npm_typescript")

#########################################################################################################
# By default you get the node version from DEFAULT_NODE_VERSION in @rules_nodejs//nodejs:repositories.bzl
# Optionally you can pin a different node version: ######################################################
bazel_dep(name = "rules_nodejs", version = "6.2.0", repo_name = "rules_nodejs_another") #################
node = use_extension("@rules_nodejs_another//nodejs:extensions.bzl", "node", dev_dependency = True) #####
node.toolchain(node_version = "18.17.1") ################################################################
#########################################################################################################

npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm", dev_dependency = True)

npm.npm_translate_lock(
    name = "npm",
    pnpm_lock = "//:pnpm-lock.yaml",
    verify_node_modules_ignored = "//:.bazelignore",
)

use_repo(npm, "npm")

pnpm = use_extension("@aspect_rules_js//npm:extensions.bzl", "pnpm")

# Allows developers to use the matching pnpm version, for example:
# bazel run -- @pnpm --dir /home/runner/work/rules_js/rules_js install
use_repo(pnpm, "pnpm")

# C++ Related
bazel_dep(name = "rules_foreign_cc", version = "0.10.1")
evspace_ext = use_extension("@evspace//:bazel/extensions.bzl", "ext")
use_repo(evspace_ext, "proxy", "rapidcheck", "refl-cpp")

# Hedron's Compile Commands Extractor for Bazel
# https://github.com/hedronvision/bazel-compile-commands-extractor
bazel_dep(name = "hedron_compile_commands", dev_dependency = True)
git_override(
    module_name = "hedron_compile_commands",
    remote = "https://github.com/eugeneo/bazel-compile-commands-extractor.git",
    commit = "844279a911d0a0adca480b299799f03f65290cce",
)

bazel_dep(name = "node_native_rules", version = "0.0.2")
local_path_override(module_name = "node_native_rules", path = "/home/nzsn/Codebases/node_native_rules")
